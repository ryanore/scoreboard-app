import {ItemView} from 'backbone.marionette';
import Session from '../../../entities/session';
import io from '../../../base/socket';
import template from './clock.hbs';

export default ItemView.extend({
  template: template,

  events: {
    'click .btn-playPause': 'toggleClock',
    'click .btn-stop': 'stopClock'
  },

  initialize() {
    this.running = false;
    io.on('joined_game', this.onInitGame.bind(this));
    io.on('tic', this.onClockUpdated.bind(this));
  },

  onAttach() {
    this.$display = this.$el.find('.digits');
  },


  /**
   * Start/Pause clock
   */
  toggleClock(e) {
    if( this.running ){
      e.currentTarget.classList.remove('pause');
      io.emit('clock_pause');
    } else {
      e.currentTarget.classList.add('pause');
      io.emit('clock_start'); 
    }
    
    this.running = !this.running;
  },


  /**
   * Stop clock
   */
  stopClock() {
    io.emit('clock_stop');
    this.running = false;
  },


  /**
   * Web Socket Connection Complete - now registered with App
   */
  onInitGame(data) {
    this.onClockUpdated(data.time);
  },


  /**
   * Convert ms to seconds, then to readable 00:00
   */
  parseTime(seconds) {
    let min = (seconds / 60) | 0;
    let sec = (seconds % 60) | 0;
    
    min = min < 10 ? "0" + min : min;
    sec = sec < 10 ? "0" + sec : sec;

    return min + ':' + sec;
  },


  /**
   * Update on server triggers change in view
   */
  onClockUpdated(data) {
    console.log('data ', data);
    let parsed = this.parseTime(data);
    this.$display.html(parsed);
  },


  /**
   * Data for template
   */
  templateHelpers() {
    let isUser = Session.isUser(this.model.get('owner'));
    return {
      allowEdit: isUser || Session.level(1)
    };
  }
});